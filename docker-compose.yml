# Regulens Development Environment
# Run ONLY databases in Docker - Backend/Frontend run natively for hot reload

services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg15
    container_name: regulens-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-regulens_compliance}
      POSTGRES_USER: ${DB_USER:-regulens_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./seed_data.sql:/docker-entrypoint-initdb.d/02-seed.sql
      - ./backups/postgres:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-regulens_user} -d ${DB_NAME:-regulens_compliance}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - regulens-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: regulens-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-dev_redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./backups/redis:/backups
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-dev_redis_password}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - regulens-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  regulens-network:
    driver: bridge
